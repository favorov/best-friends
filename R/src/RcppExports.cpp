// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rank_diff_and_p_for_the_best
NumericVector rank_diff_and_p_for_the_best(NumericVector x);
RcppExport SEXP _best_friends_rank_diff_and_p_for_the_best(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rank_diff_and_p_for_the_best(x));
    return rcpp_result_gen;
END_RCPP
}
// rank_diff_and_p_for_the_best_n
List rank_diff_and_p_for_the_best_n(NumericVector x, int n);
RcppExport SEXP _best_friends_rank_diff_and_p_for_the_best_n(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(rank_diff_and_p_for_the_best_n(x, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_best_friends_rank_diff_and_p_for_the_best", (DL_FUNC) &_best_friends_rank_diff_and_p_for_the_best, 1},
    {"_best_friends_rank_diff_and_p_for_the_best_n", (DL_FUNC) &_best_friends_rank_diff_and_p_for_the_best_n, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_best_friends(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
